# Generated by Django 2.1 on 2018-11-29 17:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Nutzerprofil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('anrede', models.CharField(max_length=4)),
                ('vorname', models.CharField(max_length=99)),
                ('nachname', models.CharField(max_length=99)),
                ('strasse', models.CharField(max_length=99)),
                ('plz', models.CharField(max_length=5)),
                ('stadt', models.CharField(max_length=99)),
                ('farbschema', models.CharField(choices=[('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-amber.css', 'Zeus'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-blue.css', 'Poseidon'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-indigo.css', 'Hera'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-brown.css', 'Demeter'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-yellow.css', 'Apollo'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-light-green.css', 'Artemis'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-dark-grey.css', 'Athene'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-red.css', 'Ares'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-pink.css', 'Aphrodite'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-grey.css', 'Hermes'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-orange.css', 'Hephaistos'), ('https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-cyan.css', 'Dionysus')], default='https://olymp.piokg.de/static/Grundgeruest/css/w3-theme-dark-grey.css', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Profile',
                'verbose_name': 'Nutzerprofil',
            },
        ),
        migrations.CreateModel(
            name='Nutzerzugang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email'],
                'verbose_name': 'Nutzerzugang',
                'abstract': False,
                'verbose_name_plural': 'Nutzerzug√§nge',
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.AddField(
            model_name='nutzerprofil',
            name='nutzer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL, verbose_name='Nutzerzugang'),
        ),
    ]
